{
	"name": "DF_BALD0205_DATE_CHG_RSN_DIM",
	"properties": {
		"folder": {
			"name": "PGMP/Dimension"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "getSourceRqstData"
				},
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "getSourcePCRData"
				},
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "getLookupData"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "updateTable"
				},
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "insertTable"
				}
			],
			"transformations": [
				{
					"name": "updateRows"
				},
				{
					"name": "CDC"
				},
				{
					"name": "mergedData"
				},
				{
					"name": "selectInsertData"
				},
				{
					"name": "addColumns1"
				},
				{
					"name": "addColumns2"
				},
				{
					"name": "selectUpdateData"
				},
				{
					"name": "sourceRqstPCRData"
				},
				{
					"name": "renamedColumns"
				},
				{
					"name": "sortedLookupData"
				}
			],
			"scriptLines": [
				"parameters{",
				"     current_user as string",
				"}",
				"source(output(",
				"          DATE_CHG_RSN_DIM_UID as integer,",
				"          PRPSL_CHG_RSN_CD as string,",
				"          PRPSL_CHG_RSN_TXT as string,",
				"          PRPSL_CHG_EXPLNN_TXT as string,",
				"          IMPLMTN_CHG_RSN_CD as string,",
				"          IMPLMTN_CHG_RSN_TXT as string,",
				"          IMPLMTN_CHG_EXPLNN_TXT as string,",
				"          PRPSL_LATE_RSN_CD as string,",
				"          PRPSL_LATE_RSN_TXT as string,",
				"          PRPSL_LATE_EXPLNN_TXT as string,",
				"          IMPLMTN_LATE_RSN_CD as string,",
				"          IMPLMTN_LATE_RSN_TXT as string,",
				"          IMPLMTN_LATE_EXPLNN_TXT as string,",
				"          ETL_JOB_ID as integer,",
				"          ETL_EXCTN_ID as integer,",
				"          SRC_SYS_DIM_UID as integer,",
				"          IS_DELETED as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'Select\\n     R.PROC_ID as DATE_CHG_RSN_DIM_UID,\\n     \\n     -- Proposal Change\\n     cast(coalesce(R.PRPSL_CHG_REASON_CD, \\'\\') as varchar(8)) as PRPSL_CHG_RSN_CD,\\n--     cast(coalesce(PRPSL_CHANGES.CHANGE_TXT, \\'\\') as varchar(400)) as PRPSL_CHG_RSN_TXT, \\n     cast(coalesce(PRPSL_CHANGES.PRPSL_CHG_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_CHG_RSN_TXT,           \\n     cast(coalesce(R.PRPSL_CHG_EXPLN, \\'\\') as varchar(200)) as PRPSL_CHG_EXPLNN_TXT,\\n           \\n     -- Implementation Change\\n     cast(coalesce(R.IMPL_CHG_REASON_CD, \\'\\') as varchar(8)) as IMPLMTN_CHG_RSN_CD, \\n--     cast(coalesce(IMPL_CHANGES.CHANGE_TXT, \\'\\') as varchar(400)) as IMPLMTN_CHG_RSN_TXT, \\n     cast(coalesce(IMPL_CHANGES.IMPL_CHG_RSN_TXT, \\'\\') as varchar(400)) as IMPLMTN_CHG_RSN_TXT,           \\n     cast(coalesce(R.IMPL_CHG_EXPLN, \\'\\') as varchar(200)) as IMPLMTN_CHG_EXPLNN_TXT, \\n          \\n     -- Proposal Late\\n     cast(coalesce(R.PRPSL_LATE_REASON_CD, \\'\\') as varchar(8)) as PRPSL_LATE_RSN_CD, \\n--     cast(coalesce(PRPSL_LATE.PRPSL_LATE_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_LATE_RSN_TXT, \\n     cast(coalesce(PRPSL_LATE.PRPSL_LATE_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_LATE_RSN_TXT,           \\n     cast(coalesce(R.PRPSL_LATE_EXPLN, \\'\\') as varchar(200)) as PRPSL_LATE_EXPLNN_TXT, \\n     \\n     -- Implementation Late\\n     cast(coalesce(R.IMPL_LATE_REASON_CD, \\'\\') as varchar(8)) as IMPLMTN_LATE_RSN_CD, \\n--     cast(coalesce(IMPL_LATE.CHANGE_TXT, \\'\\') as varchar(400)) as IMPLMTN_LATE_RSN_TXT, \\n     cast(coalesce(IMPL_LATE.IMPL_LATE_RSN_TXT, \\'\\') as varchar(400)) as IMPLMTN_LATE_RSN_TXT,           \\n     cast(coalesce(R.IMPL_LATE_EXPLN, \\'\\') as varchar(200)) as IMPLMTN_LATE_EXPLNN_TXT,\\n          \\n     -- Control fields\\n     JOB.ETL_JOB_ID,\\n     FIL.ETL_EXCTN_ID,\\n     SYS.SRC_SYS_DIM_UID,\\n     case when PDEL.PROC_ID is null then 0 else 1 end as IS_DELETED          \\nFrom\\n     APPFUN.RQST R\\n     inner join\\n     PGMPDM.ZAUX_DATE_TRIGGERS ZDT\\n     on R.PROC_ID = ZDT.PROC_ID\\n     left join\\n     PGMPDM.ZAUX_DELD_PROC_ID PDEL\\n     on R.PROC_ID = PDEL.PROC_ID\\n     left join (\\n          Select\\n               coalesce(max(ETL_JOB_ID), -1) as ETL_JOB_ID\\n          From\\n               PGMPDM.ZAUX_ETL_JOBS\\n          Where\\n               ETL_JOB_NM = \\'BALD0205_DATE_CHG_RSN_DIM\\'\\n     ) JOB\\n     on 1 = 1\\n     left join (\\n          Select\\n               ETL_EXCTN_ID,\\n               ETL_PARAM_START_TMS,\\n               ETL_PARAM_END_TMS\\n          From\\n               PGMPDM.ZAUX_ETL_EXCTN\\n          Where\\n               IS_CURR_IND = \\'Y\\'\\n     ) FIL\\n     on 1 = 1\\n     left join (\\n          Select\\n               coalesce(max(SRC_SYS_DIM_UID), -1) as SRC_SYS_DIM_UID\\n          From\\n               PGMPDM.SRC_SYS_DIM\\n          Where\\n               SRC_SYS_CD = \\'PGMP\\'\\n     ) SYS\\n     on 1 = 1\\n     Left join(\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS PRPSL_CHG_REASON_CD, \\n               T.TEXT AS PRPSL_CHG_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95592)  -- code for  PRPSL_CHG_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) PRPSL_CHANGES\\n     on R.PRPSL_CHG_REASON_CD = PRPSL_CHANGES.PRPSL_CHG_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS IMPL_CHG_REASON_CD, \\n               T.TEXT AS IMPL_CHG_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95599)  -- code for  IMPLMNT_CHG_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) IMPL_CHANGES\\n     on R.IMPL_CHG_REASON_CD = IMPL_CHANGES.IMPL_CHG_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS PRPSL_LATE_REASON_CD, \\n               T.TEXT AS PRPSL_LATE_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95591)  -- code for  PRPSL_LATE_CHG_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) PRPSL_LATE\\n     on R.PRPSL_LATE_REASON_CD = PRPSL_LATE.PRPSL_LATE_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS IMPL_LATE_REASON_CD, \\n               T.TEXT AS IMPL_LATE_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95600)  -- code for  IMPL_LATE_REASON_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) IMPL_LATE\\n     on R.IMPL_LATE_REASON_CD = IMPL_LATE.IMPL_LATE_REASON_CD',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> getSourceRqstData",
				"source(output(",
				"          DATE_CHG_RSN_DIM_UID as integer,",
				"          PRPSL_CHG_RSN_CD as string,",
				"          PRPSL_CHG_RSN_TXT as string,",
				"          PRPSL_CHG_EXPLNN_TXT as string,",
				"          IMPLMTN_CHG_RSN_CD as string,",
				"          IMPLMTN_CHG_RSN_TXT as string,",
				"          IMPLMTN_CHG_EXPLNN_TXT as string,",
				"          PRPSL_LATE_RSN_CD as string,",
				"          PRPSL_LATE_RSN_TXT as string,",
				"          PRPSL_LATE_EXPLNN_TXT as string,",
				"          IMPLMTN_LATE_RSN_CD as string,",
				"          IMPLMTN_LATE_RSN_TXT as string,",
				"          IMPLMTN_LATE_EXPLNN_TXT as string,",
				"          ETL_JOB_ID as integer,",
				"          ETL_EXCTN_ID as integer,",
				"          SRC_SYS_DIM_UID as integer,",
				"          IS_DELETED as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'Select\\n     R.PROC_ID as DATE_CHG_RSN_DIM_UID,\\n          \\n     -- Proposal Change\\n     cast(coalesce(R.PRPSL_CHG_REASON_CD, \\'\\') as varchar(8)) as PRPSL_CHG_RSN_CD,\\n--     cast(coalesce(PRPSL_CHANGES.CHANGE_TXT, \\'\\') as varchar(400)) as PRPSL_CHG_RSN_TXT, \\n     cast(coalesce(PRPSL_CHANGES.PRPSL_CHG_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_CHG_RSN_TXT,           \\n     cast(coalesce(R.PRPSL_CHG_EXPLN, \\'\\') as varchar(200)) as PRPSL_CHG_EXPLNN_TXT,\\n           \\n     -- Implementation Change\\n     cast(coalesce(R.IMPL_CHG_REASON_CD, \\'\\') as varchar(8)) as IMPLMTN_CHG_RSN_CD, \\n--     cast(coalesce(IMPL_CHANGES.CHANGE_TXT, \\'\\') as varchar(400)) as IMPLMTN_CHG_RSN_TXT, \\n     cast(coalesce(IMPL_CHANGES.IMPL_CHG_RSN_TXT, \\'\\') as varchar(400)) as IMPLMTN_CHG_RSN_TXT,           \\n     cast(coalesce(R.IMPL_CHG_EXPLN, \\'\\') as varchar(200)) as IMPLMTN_CHG_EXPLNN_TXT, \\n          \\n     -- Proposal Late\\n     cast(coalesce(R.PRPSL_LATE_REASON_CD, \\'\\') as varchar(8)) as PRPSL_LATE_RSN_CD, \\n--     cast(coalesce(PRPSL_LATE.PRPSL_LATE_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_LATE_RSN_TXT, \\n     cast(coalesce(PRPSL_LATE.PRPSL_LATE_RSN_TXT, \\'\\') as varchar(400)) as PRPSL_LATE_RSN_TXT,           \\n     cast(coalesce(R.PRPSL_LATE_EXPLN, \\'\\') as varchar(200)) as PRPSL_LATE_EXPLNN_TXT, \\n     \\n     -- Implementation Late\\n     cast(coalesce(R.IMPL_LATE_REASON_CD, \\'\\') as varchar(8)) as IMPLMTN_LATE_RSN_CD, \\n--     cast(coalesce(IMPL_LATE.CHANGE_TXT, \\'\\') as varchar(400)) as IMPLMTN_LATE_RSN_TXT, \\n     cast(coalesce(IMPL_LATE.IMPL_LATE_RSN_TXT, \\'\\') as varchar(400)) as IMPLMTN_LATE_RSN_TXT,           \\n     cast(coalesce(R.IMPL_LATE_EXPLN, \\'\\') as varchar(200)) as IMPLMTN_LATE_EXPLNN_TXT,\\n          \\n     -- Control fields\\n     JOB.ETL_JOB_ID,\\n     FIL.ETL_EXCTN_ID,\\n     SYS.SRC_SYS_DIM_UID,\\n     case when PDEL.PROC_ID is null then 0 else 1 end as IS_DELETED          \\nFrom\\n     APPFUN.PCR R\\n     inner join\\n     PGMPDM.ZAUX_DATE_TRIGGERS ZDT\\n     on R.PROC_ID = ZDT.PROC_ID\\n     left join\\n     PGMPDM.ZAUX_DELD_PROC_ID PDEL\\n     on R.PROC_ID = PDEL.PROC_ID\\n     left join (\\n          Select\\n               coalesce(max(ETL_JOB_ID), -1) as ETL_JOB_ID\\n          From\\n               PGMPDM.ZAUX_ETL_JOBS\\n          Where\\n               ETL_JOB_NM = \\'BALD0205_DATE_CHG_RSN_DIM\\'\\n     ) JOB\\n     on 1 = 1\\n     left join (\\n          Select\\n               ETL_EXCTN_ID,\\n               ETL_PARAM_START_TMS,\\n               ETL_PARAM_END_TMS\\n          From\\n               PGMPDM.ZAUX_ETL_EXCTN\\n          Where\\n               IS_CURR_IND = \\'Y\\'\\n     ) FIL\\n     on 1 = 1\\n     left join (\\n          Select\\n               coalesce(max(SRC_SYS_DIM_UID), -1) as SRC_SYS_DIM_UID\\n          From\\n               PGMPDM.SRC_SYS_DIM\\n          Where\\n               SRC_SYS_CD = \\'PGMP\\'\\n     ) SYS\\n     on 1 = 1\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS PRPSL_CHG_REASON_CD, \\n               T.TEXT AS PRPSL_CHG_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95592)  -- code for  PRPSL_CHG_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) PRPSL_CHANGES\\n     on R.PRPSL_CHG_REASON_CD = PRPSL_CHANGES.PRPSL_CHG_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS IMPL_CHG_REASON_CD, \\n               T.TEXT AS IMPL_CHG_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95599)  -- code for  IMPLMNT_CHG_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) IMPL_CHANGES\\n     on R.IMPL_CHG_REASON_CD = IMPL_CHANGES.IMPL_CHG_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS PRPSL_LATE_REASON_CD, \\n               T.TEXT AS PRPSL_LATE_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID\\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID = 95591\\n               AND SELLIST.ACTIVE_IND = \\'Y\\'\\n               AND T.LANG_ID = 1  \\n     ) PRPSL_LATE\\n     on R.PRPSL_LATE_REASON_CD = PRPSL_LATE.PRPSL_LATE_REASON_CD\\n     Left join (\\n          SELECT \\n               SELLIST.INTERNAL_VAL AS IMPL_LATE_REASON_CD, \\n               T.TEXT AS IMPL_LATE_RSN_TXT\\n          FROM \\n               APPFUN.UI_SEL_LIST_DEF_WW_UV SELLIST\\n               INNER JOIN\\n               APPFUN.MULTILANG_TEXT_DEF_WW_UV T\\n               ON T.MULTILANG_TEXT_ID = SELLIST.MULTILANG_SEL_TEXT_ID \\n          WHERE \\n               SELLIST.UI_SEL_LIST_ID IN(95600)  -- code for  IMPL_LATE_REASON_CD\\n               -- AND SELLIST.ACTIVE_IND = \\'Y\\'        this condition is commented because the history data still have codes with the active_ind = \\'N\\'\\n               AND T.LANG_ID = 1      \\n     ) IMPL_LATE\\n     on R.IMPL_LATE_REASON_CD = IMPL_LATE.IMPL_LATE_REASON_CD',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> getSourcePCRData",
				"source(output(",
				"          DATE_CHG_RSN_DIM_UID as integer,",
				"          PRPSL_CHG_RSN_CD as string,",
				"          PRPSL_CHG_RSN_TXT as string,",
				"          PRPSL_CHG_EXPLNN_TXT as string,",
				"          IMPLMTN_CHG_RSN_CD as string,",
				"          IMPLMTN_CHG_RSN_TXT as string,",
				"          IMPLMTN_CHG_EXPLNN_TXT as string,",
				"          PRPSL_LATE_RSN_CD as string,",
				"          PRPSL_LATE_RSN_TXT as string,",
				"          PRPSL_LATE_EXPLNN_TXT as string,",
				"          IMPLMTN_LATE_RSN_CD as string,",
				"          IMPLMTN_LATE_RSN_TXT as string,",
				"          IMPLMTN_LATE_EXPLNN_TXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'Select\\n     DATE_CHG_RSN_DIM_UID,\\n     PRPSL_CHG_RSN_CD,\\n     PRPSL_CHG_RSN_TXT,\\n     PRPSL_CHG_EXPLNN_TXT,\\n     IMPLMTN_CHG_RSN_CD,\\n     IMPLMTN_CHG_RSN_TXT,\\n     IMPLMTN_CHG_EXPLNN_TXT,\\n     PRPSL_LATE_RSN_CD,\\n     PRPSL_LATE_RSN_TXT,\\n     PRPSL_LATE_EXPLNN_TXT,\\n     IMPLMTN_LATE_RSN_CD,\\n     IMPLMTN_LATE_RSN_TXT,\\n     IMPLMTN_LATE_EXPLNN_TXT\\nFrom\\n     PGMPDM.DATE_CHG_RSN_DIM S\\n     inner join\\n     PGMPDM.ZAUX_DATE_TRIGGERS ZDT\\n     on S.DATE_CHG_RSN_DIM_UID = ZDT.PROC_ID',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> getLookupData",
				"selectUpdateData alterRow(updateIf(true())) ~> updateRows",
				"mergedData split(DATE_CHG_RSN_DIM_UID==LKP_DATE_CHG_RSN_DIM_UID,",
				"     disjoint: false) ~> CDC@(dataToBeUpdated, dataToBeInserted)",
				"sourceRqstPCRData, sortedLookupData join(DATE_CHG_RSN_DIM_UID == LKP_DATE_CHG_RSN_DIM_UID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> mergedData",
				"addColumns2 select(mapColumn(",
				"          DATE_CHG_RSN_DIM_UID,",
				"          PRPSL_CHG_RSN_CD,",
				"          PRPSL_CHG_RSN_TXT,",
				"          PRPSL_CHG_EXPLNN_TXT,",
				"          IMPLMTN_CHG_RSN_CD,",
				"          IMPLMTN_CHG_RSN_TXT,",
				"          IMPLMTN_CHG_EXPLNN_TXT,",
				"          PRPSL_LATE_RSN_CD,",
				"          PRPSL_LATE_RSN_TXT,",
				"          PRPSL_LATE_EXPLNN_TXT,",
				"          IMPLMTN_LATE_RSN_CD,",
				"          IMPLMTN_LATE_RSN_TXT,",
				"          IMPLMTN_LATE_EXPLNN_TXT,",
				"          ETL_JOB_ID,",
				"          ETL_EXCTN_ID,",
				"          SRC_SYS_DIM_UID,",
				"          ROW_STAT_CD,",
				"          DM_CRETD_USER_ID,",
				"          DM_CRETD_TMS,",
				"          DM_UPDTD_USER_ID,",
				"          DM_UPDTD_TMS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectInsertData",
				"CDC@dataToBeUpdated derive(ROW_STAT_CD = iif(IS_DELETED == 1, 'D', 'U'),",
				"          DM_CRETD_USER_ID = $current_user,",
				"          DM_UPDTD_USER_ID = $current_user,",
				"          DM_UPDTD_TMS = currentTimestamp()) ~> addColumns1",
				"CDC@dataToBeInserted derive(ROW_STAT_CD = iif(IS_DELETED == 1, 'D', 'I'),",
				"          DM_CRETD_USER_ID = $current_user,",
				"          DM_CRETD_TMS = currentTimestamp(),",
				"          DM_UPDTD_USER_ID = $current_user,",
				"          DM_UPDTD_TMS = currentTimestamp()) ~> addColumns2",
				"addColumns1 select(mapColumn(",
				"          DATE_CHG_RSN_DIM_UID,",
				"          PRPSL_CHG_RSN_CD,",
				"          PRPSL_CHG_RSN_TXT,",
				"          PRPSL_CHG_EXPLNN_TXT,",
				"          IMPLMTN_CHG_RSN_CD,",
				"          IMPLMTN_CHG_RSN_TXT,",
				"          IMPLMTN_CHG_EXPLNN_TXT,",
				"          PRPSL_LATE_RSN_CD,",
				"          PRPSL_LATE_RSN_TXT,",
				"          PRPSL_LATE_EXPLNN_TXT,",
				"          IMPLMTN_LATE_RSN_CD,",
				"          IMPLMTN_LATE_RSN_TXT,",
				"          IMPLMTN_LATE_EXPLNN_TXT,",
				"          ETL_JOB_ID,",
				"          ETL_EXCTN_ID,",
				"          SRC_SYS_DIM_UID,",
				"          ROW_STAT_CD,",
				"          DM_CRETD_USER_ID,",
				"          DM_UPDTD_USER_ID,",
				"          DM_UPDTD_TMS",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectUpdateData",
				"getSourceRqstData, getSourcePCRData union(byName: true)~> sourceRqstPCRData",
				"getLookupData select(mapColumn(",
				"          each(match(true()),",
				"               'LKP_'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renamedColumns",
				"renamedColumns sort(asc(LKP_DATE_CHG_RSN_DIM_UID, true)) ~> sortedLookupData",
				"updateRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'PGMPDM',",
				"     tableName: 'DATE_CHG_RSN_DIM',",
				"     insertable: false,",
				"     updateable: true,",
				"     deletable: false,",
				"     upsertable: false,",
				"     keys:['DATE_CHG_RSN_DIM_UID'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 0,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     preCommands: [],",
				"     postCommands: []) ~> updateTable",
				"selectInsertData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'PGMPDM',",
				"     tableName: 'DATE_CHG_RSN_DIM',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> insertTable"
			]
		}
	}
}