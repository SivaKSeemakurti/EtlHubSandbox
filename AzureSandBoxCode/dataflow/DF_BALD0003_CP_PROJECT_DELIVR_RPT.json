{
	"name": "DF_BALD0003_CP_PROJECT_DELIVR_RPT",
	"properties": {
		"description": "Job creation:05-06-2022\nJob name: DF_BALD0003_CP_PROJECT_DELIVR_RPT\nCreated By: Varaprasad",
		"folder": {
			"name": "PGMP/CP Summary & Custom Field audit"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "getSourceDataforPCR"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_pgmp_rfs_db",
						"type": "LinkedServiceReference"
					},
					"name": "upsertTable"
				}
			],
			"transformations": [
				{
					"name": "upsertRows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CNTRCT_DIM_UID as integer,",
				"          CONTRACT as string,",
				"          UNIQUE_ID as integer,",
				"          DISPLAY_ID as string,",
				"          GLBL_BUY_GRP_ID as string,",
				"          PARENT_UNIQUE_ID as integer,",
				"          PARENT_RECORD_TYPE as string,",
				"          PARENT_DISPLAY_ID as string,",
				"          PARENT_TITLE as string,",
				"          CLIENT_REFERENCE as string,",
				"          PROC_TITLE as string,",
				"          PROC_DESCRIPTION as string,",
				"          CURRENT_WORKFLOW as string,",
				"          CURRENT_WKFLW_STEP as string,",
				"          CURRENT_STEP_SEQ as integer,",
				"          STEP_DESCRIPTION as string,",
				"          STATE_DESC as string,",
				"          STATUS_DESC as string,",
				"          DUE_DT as date,",
				"          RVSD_DUE_DT as date,",
				"          AUDIENCE as string,",
				"          PRIORITY_TXT as string,",
				"          CONDITION as string,",
				"          REGION as string,",
				"          CREATED_DATE as timestamp,",
				"          LAST_UPDATED as timestamp,",
				"          COMPLETION_DATE as date,",
				"          CMPLTD_RSN_TXT as string,",
				"          RECEIVING_ORGANIZATION as string,",
				"          AGREEMENT_REFERENCE_DETAILS as string,",
				"          ACCEPT_OR_COMPLETE_CRITERIA as string,",
				"          ACTUAL_DATE_DELIVERED as date,",
				"          LOCATION_OF_DELIVERABLE as string,",
				"          CLIENT_ACCEPTANCE_DATE as date,",
				"          REMARKS as string,",
				"          SRC_SYS_CD as string,",
				"          LEGACY_UNIQUE_ID as string,",
				"          LEGACY_DISPLAYED_ID as string,",
				"          LATEST_IBM_ONLY_NOTE as string,",
				"          LATEST_IBM_AND_CLIENT_NOTE as string,",
				"          CNTRCT_TYPE_DESC as string,",
				"          PROC_TYPE_ID as string,",
				"          PROC_TYPE_DESC as string,",
				"          ON_HOLD_CD as string,",
				"          WITHDRWN_DIM_UID as integer,",
				"          WITHDRWN_DT as date,",
				"          ORGNZN_DIM_UID as integer,",
				"          IBM_ONLY_TEXT_1 as string,",
				"          IBM_ONLY_TEXT_2 as string,",
				"          IBM_ONLY_TEXT_3 as string,",
				"          IBM_ONLY_TEXT_4 as string,",
				"          IBM_ONLY_TEXT_5 as string,",
				"          IBM_ONLY_TEXT_6 as string,",
				"          IBM_ONLY_DATE_1 as date,",
				"          IBM_ONLY_DATE_2 as date,",
				"          IBM_ONLY_DATE_3 as date,",
				"          IBM_ONLY_DATE_4 as date,",
				"          IBM_ONLY_DATE_5 as date,",
				"          IBM_ONLY_DATE_6 as date,",
				"          PUBLIC_TEXT_1 as string,",
				"          PUBLIC_TEXT_2 as string,",
				"          PUBLIC_TEXT_3 as string,",
				"          PUBLIC_TEXT_4 as string,",
				"          PUBLIC_TEXT_5 as string,",
				"          PUBLIC_TEXT_6 as string,",
				"          PUBLIC_DATE_1 as date,",
				"          PUBLIC_DATE_2 as date,",
				"          PUBLIC_DATE_3 as date,",
				"          PUBLIC_DATE_4 as date,",
				"          PUBLIC_DATE_5 as date,",
				"          PUBLIC_DATE_6 as date,",
				"          STATE_OF_ORGANIZATION as string,",
				"          SCTR_NM as string,",
				"          CLIENT_UNIT as string,",
				"          COUNTRY as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: 'SELECT C.CNTRCT_DIM_UID,\\nC.CNTRCT_NM AS CONTRACT,\\nH.PROC_DIM_UID AS UNIQUE_ID,\\nP.PROC_DSPLY_ID AS DISPLAY_ID,\\nZACNTRCT.GLBL_BUY_GRP_ID,\\nPR.PROC_DIM_UID AS PARENT_UNIQUE_ID,      \\nPRNT_PTYPE.PROC_TYPE_DESC AS PARENT_RECORD_TYPE,   \\nPR.PROC_DSPLY_ID AS PARENT_DISPLAY_ID,    \\nPR.TITLE_TXT AS PARENT_TITLE,\\nP.CLNT_REF_NUM AS CLIENT_REFERENCE,\\nP.TITLE_TXT AS PROC_TITLE,\\nP.PROC_DESC AS PROC_DESCRIPTION,\\nWKFLW.WKFLW_DEF_ID AS CURRENT_WORKFLOW,\\nWKFLW_STEP.WKFLW_STEP_DEF_ID AS CURRENT_WKFLW_STEP,\\nWKFLW_STEP.WKFLW_STEP_SEQ_NUM AS CURRENT_STEP_SEQ, \\nWKFLW_STEP.WKFLW_STEP_DESC AS STEP_DESCRIPTION,    \\nST.STATE_TITLE_TXT STATE_DESC,\\nSTATUS.STAT_IBM_DESC AS STATUS_DESC,\\nFCT.DUE_DT,\\nFCT.RVSD_DUE_DT,/*\\nDAYS(NVL(FCT.DUE_DT,FCT.RVSD_DUE_DT)) - DAYS((CURRENT_TIMESTAMP - CURRENT_TIMEZONE) + AF.TZ HOURS) AS DUE_IN_DAY_CNT,\\nCASE WHEN DAYS(NVL(FCT.RVSD_DUE_DT,FCT.DUE_DT)) - DAYS((CURRENT_TIMESTAMP - CURRENT_TIMEZONE) + AF.TZ HOURS) < 0 THEN \\'Y\\' ELSE \\'N\\' END AS OVERDUE, */      \\n--decrypt_char(ASSGNTO.CONCAT_NM_LOGIN,MIS_REP_REF.MIS_REP_REF_CD) AS ASSIGNED_TO,\\nAUDIENCE.ADNC_TXT AS AUDIENCE,\\nPD.PRIORITY_TXT,\\nCOND.COND_TXT AS CONDITION,\\nCOALESCE(RGN.REGION,GEO.KYNDRYL_RGN) AS REGION,\\n--decrypt_char(P.RQSTR_TXT,MIS_REP_REF.MIS_REP_REF_CD) AS REQUESTOR,\\n--decrypt_char(CREATOR.CONCAT_NM_LOGIN,MIS_REP_REF.MIS_REP_REF_CD) AS CREATED_BY,\\nH.SRC_CRETD_TMS AS CREATED_DATE,\\nH.SRC_UPDTD_TMS AS LAST_UPDATED,\\nH.CMPLTD_DT AS COMPLETION_DATE,\\nP.CMPLTD_RSN_TXT,\\n--decrypt_char(PDELIVER.DELVRBL_OWNR_TXT,\\n--MIS_REP_REF.MIS_REP_REF_CD) AS DELIVERABLE_OWNER,\\nCASE PDELIVER.RCVNG_ORG WHEN \\'I\\' THEN \\'IBM\\' WHEN \\'C\\' THEN \\'Client\\' ELSE \\'\\' END AS RECEIVING_ORGANIZATION,\\n--decrypt_char(PDELIVER.DELVRBL_RCPNT_TXT,MIS_REP_REF.MIS_REP_REF_CD) AS DELIVERABLE_RECIPIENT,\\nPDELIVER.AGRMT_REF_DTL_TXT AS AGREEMENT_REFERENCE_DETAILS,\\nPDELIVER.ACCPTD_COMPL_CRTR_TXT AS ACCEPT_OR_COMPLETE_CRITERIA,\\nFCT.ACT_DELVRD_DT AS ACTUAL_DATE_DELIVERED,\\nPDELIVER.LCTN_OF_DELVRBL_TXT AS LOCATION_OF_DELIVERABLE,\\nFCT.CLNT_ACCPTD_DT AS CLIENT_ACCEPTANCE_DATE,\\nPDELIVER.PRJCTDLVBL_REM_TXT AS REMARKS,\\nSRC.SRC_SYS_CD,\\n\\' \\' AS LEGACY_UNIQUE_ID,\\n\\' \\' AS LEGACY_DISPLAYED_ID,\\nTRIM(INOTES.NOTES_DESC) AS LATEST_IBM_ONLY_NOTE,\\nTRIM(PNOTES.NOTES_DESC) AS LATEST_IBM_AND_CLIENT_NOTE,\\nCTYPE.CNTRCT_TYPE_DESC,\\nPTYPE.PROC_TYPE_ID,\\nPTYPE.PROC_TYPE_DESC,\\nONHOLD.ON_HOLD_CD,\\nH.WITHDRWN_DIM_UID,\\nH.WITHDRWN_DT,\\nH.ORGNZN_DIM_UID,\\nDATAIBM.IBM_ONLY_TEXT_1,\\nDATAIBM.IBM_ONLY_TEXT_2,\\nDATAIBM.IBM_ONLY_TEXT_3,\\nDATAIBM.IBM_ONLY_TEXT_4,\\nDATAIBM.IBM_ONLY_TEXT_5,\\nDATAIBM.IBM_ONLY_TEXT_6,\\nDATAIBM.IBM_ONLY_DATE_1,\\nDATAIBM.IBM_ONLY_DATE_2,\\nDATAIBM.IBM_ONLY_DATE_3,\\nDATAIBM.IBM_ONLY_DATE_4,\\nDATAIBM.IBM_ONLY_DATE_5,\\nDATAIBM.IBM_ONLY_DATE_6,\\nDATAPBLIC.PUBLIC_TEXT_1,\\nDATAPBLIC.PUBLIC_TEXT_2,\\nDATAPBLIC.PUBLIC_TEXT_3,\\nDATAPBLIC.PUBLIC_TEXT_4,\\nDATAPBLIC.PUBLIC_TEXT_5,\\nDATAPBLIC.PUBLIC_TEXT_6,\\nDATAPBLIC.PUBLIC_DATE_1,\\nDATAPBLIC.PUBLIC_DATE_2,\\nDATAPBLIC.PUBLIC_DATE_3,\\nDATAPBLIC.PUBLIC_DATE_4,\\nDATAPBLIC.PUBLIC_DATE_5,\\nDATAPBLIC.PUBLIC_DATE_6,\\nSOO.STAT_OF_ORGNZN_DESC AS STATE_OF_ORGANIZATION,\\nSCTR.SCTR_NM,\\nZACNTRCT.CLIENT_UNIT_NM AS CLIENT_UNIT,\\nGEO.SRGNCTRY_NM AS COUNTRY\\n\\nFROM PGMPDM.PRJCTDLVBL_DIM PDELIVER\\n\\nINNER JOIN PGMPDM.PROC_HEADR_FCT H ON H.PROC_DIM_UID = PDELIVER.PRJCTDLVBL_DIM_UID AND H.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.PROC_TYPE_DIM PTYPE ON PTYPE.PROC_TYPE_DIM_UID = H.PROC_TYPE_DIM_UID AND PTYPE.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.PROC_DIM P ON P.PROC_DIM_UID = H.PROC_DIM_UID AND P.ROW_STAT_CD <> \\'D\\'\\n\\nINNER JOIN PGMPDM.CNTRCT_DIM C ON C.CNTRCT_DIM_UID = P.CNTRCT_DIM_UID AND C.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.CNTRCT_TYPE_DIM CTYPE ON CTYPE.CNTRCT_TYPE_DIM_UID = C.CNTRCT_TYPE_DIM_UID AND CTYPE.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.WKFLW_DEF_DIM INITWDD ON INITWDD.WKFLW_DEF_DIM_UID = H.INIT_WKFLW_DEF_DIM_UID AND INITWDD.ROW_STAT_CD <> \\'D\\' \\n\\nINNER JOIN PGMPDM.WKFLW_DEF_DIM WKFLW ON WKFLW.WKFLW_DEF_DIM_UID = H.WKFLW_DEF_DIM_UID AND WKFLW.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.WKFLW_STEP_DEF_DIM WKFLW_STEP ON WKFLW_STEP.WKFLW_STEP_DEF_DIM_UID = H.WKFLW_STEP_DEF_DIM_UID AND WKFLW_STEP.ROW_STAT_CD <> \\'D\\'     \\nINNER JOIN PGMPDM.STATE_DIM ST ON ST.STATE_DIM_UID = H.STATE_DIM_UID AND ST.ROW_STAT_CD <> \\'D\\'\\n\\nINNER JOIN PGMPDM.PROC_STEP_DAT_DIM PSD ON P.PROC_DIM_UID = PSD.PROC_DIM_UID AND P.CURR_PROC_STEP_DAT_DIM_UID = PSD.PROC_STEP_DAT_DIM_UID AND PSD.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.GEO_DIM GEO ON GEO.GEO_DIM_UID = H.GEO_DIM_UID \\n--AND GEO.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.MISC_FCT FCT ON FCT.PROC_HEADR_FCT_UID = H.PROC_HEADR_FCT_UID AND FCT.ROW_STAT_CD <> \\'D\\'\\n\\nINNER JOIN PGMPDM.SRC_SYS_DIM SRC ON SRC.SRC_SYS_DIM_UID = H.SRC_SYS_DIM_UID AND SRC.ROW_STAT_CD <> \\'D\\'\\nINNER JOIN PGMPDM.SCTR_DIM SCTR ON SCTR.SCTR_DIM_UID = C.SCTR_DIM_UID AND SCTR.ROW_STAT_CD <> \\'D\\'\\nLEFT OUTER JOIN PGMPDM.STAT_DIM STATUS ON STATUS.STAT_DIM_UID = H.STAT_DIM_UID AND STATUS.ROW_STAT_CD <> \\'D\\'\\nLEFT OUTER JOIN PGMPDM.MISC_REP_REF MIS_REP_REF ON MIS_REP_REF_UID = 3\\n\\nLEFT OUTER JOIN PGMPDM.USER_DIM ASSGNTO ON ASSGNTO.USER_ID = PSD.ASSGN_TO_NUM AND ASSGNTO.ROW_STAT_CD <> \\'D\\'\\nLEFT OUTER JOIN PGMPDM.ADNC_DIM AUDIENCE ON AUDIENCE.ADNC_CD = P.ADNC_CD\\nLEFT OUTER JOIN PGMPDM.PRIORITY_DIM PD ON PD.PRIORITY_NUM = P.PRIORTY_NUM\\n\\nLEFT OUTER JOIN PGMPDM.COND_DIM COND ON COND.COND_CD = P.CNDTN_CD\\nLEFT OUTER JOIN APPFUN.PROC_REGION_V RGN ON RGN.PROC_ID = P.PROC_DIM_UID AND RGN.INTERNAL_VAL <> \\'NONE\\'\\nLEFT OUTER JOIN PGMPDM.USER_DIM CREATOR ON CREATOR.USER_DIM_UID = H.CRETD_BY_USER_DIM_UID AND CREATOR.ROW_STAT_CD <> \\'D\\'\\n\\nLEFT OUTER JOIN PGMPDM.NOTES_DIM INOTES ON INOTES.PROC_DIM_UID = P.PROC_DIM_UID AND INOTES.ROW_STAT_CD <> \\'D\\' AND INOTES.NOTE_TYPE_CD = \\'I\\'  AND INOTES.LATEST_NOTE_IND = \\'Y\\'\\nLEFT OUTER JOIN PGMPDM.NOTES_DIM PNOTES ON PNOTES.PROC_DIM_UID = P.PROC_DIM_UID AND PNOTES.ROW_STAT_CD <> \\'D\\' AND PNOTES.NOTE_TYPE_CD = \\'P\\'  AND PNOTES.LATEST_NOTE_IND = \\'Y\\'\\nLEFT OUTER JOIN PGMPDM.ON_HOLD_DIM ONHOLD ON ONHOLD.ON_HOLD_DIM_UID = H.ON_HOLD_DIM_UID AND ONHOLD.ROW_STAT_CD <> \\'D\\'\\n\\nLEFT OUTER JOIN PGMPDM.PROC_DIM PR ON PR.PROC_DIM_UID = P.PARNT_PROC_ID AND PR.ROW_STAT_CD <> \\'D\\'\\nLEFT OUTER JOIN PGMPDM.PROC_HEADR_FCT PARENT_FCT ON PARENT_FCT.PROC_HEADR_FCT_UID = PR.PROC_DIM_UID AND PARENT_FCT.ROW_STAT_CD <> \\'D\\'\\nLEFT OUTER JOIN PGMPDM.PROC_TYPE_DIM PRNT_PTYPE ON PRNT_PTYPE.PROC_TYPE_DIM_UID = PARENT_FCT.PROC_TYPE_DIM_UID AND PRNT_PTYPE.ROW_STAT_CD <> \\'D\\'\\n\\nLEFT OUTER JOIN PGMPDM.PROC_CSTM_DATA_PUBLIC_DIM DATAPBLIC ON DATAPBLIC.PROC_DIM_UID = P.PROC_DIM_UID\\nLEFT OUTER JOIN PGMPDM.PROC_CSTM_DATA_IBM_CLIENT_DIM DATAIBM ON DATAIBM.PROC_DIM_UID = P.PROC_DIM_UID\\nLEFT OUTER JOIN PGMPDM.ORG_CNTRCT_MAP_DIM ORG_MAP ON ORG_MAP.CNTRCT_DIM_UID = C.CNTRCT_DIM_UID\\n\\nLEFT OUTER JOIN PGMPDM.ORGNZN_DIM ORG ON ORG.ORGNZN_DIM_UID = ORG_MAP.ORGNZN_DIM_UID\\nLEFT OUTER JOIN PGMPDM.STAT_OF_ORGNZN_DIM SOO ON SOO.STAT_OF_ORGNZN_DIM_UID = ORG.STAT_OF_ORGNZN_DIM_UID\\nLEFT OUTER JOIN PGMPDM.ZAUX_CNTRCT_GLBL_BUY_GRP_MAP ZACNTRCT ON ZACNTRCT.CNTRCT_DIM_UID = C.CNTRCT_DIM_UID\\n\\n--LEFT OUTER JOIN PGMPDM.CNTRCT_TZ_V AF ON C.CNTRCT_DIM_UID = AF.CNTRCT_DIM_UID \\n\\nWHERE PDELIVER.ROW_STAT_CD <> \\'D\\' AND PTYPE.PROC_TYPE_ID = \\'PDELIVER\\' AND P.ADNC_ACCSS_CD <> \\'C\\' AND H.DELD_DT IS NULL AND SRC.SRC_SYS_CD = \\'PGMP\\'\\n',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> getSourceDataforPCR",
				"getSourceDataforPCR alterRow(insertIf(true())) ~> upsertRows",
				"upsertRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'PGMPDM',",
				"     tableName: 'PROJECT_DELIVR_RPT',",
				"     insertable: false,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: true,",
				"     keys:['UNIQUE_ID'],",
				"     skipKeyWrites:true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     preCommands: [],",
				"     postCommands: []) ~> upsertTable"
			]
		}
	}
}